{"version":3,"sources":["Writesharelogosmaller.png","Context.js","components/Navbar/index.js","components/StaticSidebar/index.js","pages/Welcome/index.js","utils/API.js","pages/Register/index.js","components/UserSidebar/index.js","pages/Dashboard/index.js","components/MyPodsTable/index.js","pages/MyPods/index.js","pages/Login/index.js","pages/CreatePod/index.js","pages/SearchPods/index.js","components/PodNav/index.js","pages/Pod/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","AppContext","React","createContext","AppProvider","state","currentUser","currentUserId","contextLogin","name","id","_this","setState","handleLogout","react_default","a","createElement","Provider","value","this","props","children","Component","logo","require","Navbar","Fragment","className","Link","to","src","alt","Consumer","onClick","StaticSidebar","href","target","rel","Welcome","API","login","userData","axios","post","register","createPod","podData","getMyPods","userId","getOnePod","podId","newContent","content","nextUser","data","findAll","get","joinPod","findYourTurn","Register","email","username","password","password2","about_me","registerFail","checkInputs","length","handleInputChange","event","_event$target","Object","defineProperty","handleRegister","aboutMe","then","res","status","_id","catch","err","console","log","_this2","type","onChange","htmlFor","disabled","UserSidebar","context","Dashboard","pods","components_UserSidebar","map","pod","key","contentCreator","contentText","MyPodsTable","topic","activeParticipant","MyPods","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","placeholder","required","components_MyPodsTable","Login","loginFail","handleLogin","CreatePod","handleNewPod","podName","creator","user","creatorId","numParticipants","totalParticipants","participantIds","newPodCreated","createFail","min","max","SearchPods","PodNav","indexOf","iterateUser","Pod","getPodData","yourTurn","postContent","newIndex","currentIndex","newActive","match","params","components_PodNav","join","block","class","App","BrowserRouter","Context_AppProvider","components_Navbar","Route","exact","path","component","render","Redirect","pages_Register","pages_Login","pages_MyPods","pages_CreatePod","pages_SearchPods","pages_Pod","components_StaticSidebar","Boolean","window","location","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e38e9a3e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Writesharelogosmaller.7982a0c9.png\";","import React from 'react';\n\nconst AppContext = React.createContext();\n\nclass AppProvider extends React.Component {\n    state = {\n        currentUser: \"\",\n        currentUserId: null,\n    }\n\n    contextLogin = (name,id) => {\n        this.setState({currentUser: name, currentUserId: id})\n    }\n\n    handleLogout = () => {\n        this.setState({currentUser: \"\", currentUserId: null})\n    }\n\n    render() {\n        return (\n            <AppContext.Provider value={{\n                currentUser: this.state.currentUser,\n                currentUserId: this.state.currentUserId,\n                contextLogin: this.contextLogin,\n                handleLogout: this.handleLogout,\n                }}>\n                {this.props.children}\n            </AppContext.Provider>\n        )\n    }\n}\n\nexport { AppProvider, AppContext } ;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { AppContext } from '../../Context';\nconst logo = require('../../Writesharelogosmaller.png');\n\n\nconst Navbar = props => {\n  return (\n    <>\n      <nav className=\"top-nav blue-grey darken-4\">\n        <div className=\"nav-wrapper\">\n          <Link to=\"/\" className=\"brand-logo\"><img className=\"logo\" src={logo} alt=\"logo\" /></Link>\n          <ul className=\"right\">\n          <AppContext.Consumer>\n          {value => {\n            const {currentUser, handleLogout} = value;\n            return !currentUser ? (\n            <>\n            <li><Link to=\"/register\" className=\"main-button-font waves-effect waves-green btn lime accent-2 black-text\">Register</Link></li>\n            <li><Link id=\"login-button\" to=\"/login\" className=\"main-button-font waves-effect waves-red btn light-green accent-2 black-text\">Login</Link></li>\n            </>\n          ):(\n            <li><button id=\"logout-button\" onClick={handleLogout} className=\"main-button-font waves-effect waves-yellow btn purple lighten-2 black-text\" >Log Out</button></li>\n          )}}\n          </AppContext.Consumer>\n          </ul>\n        </div>\n      </nav>\n\n    </>\n  )\n}\n\nexport default Navbar;","import React from 'react';\n\nconst StaticSidebar = props => {\n    return (\n        <div className=\"side-nav collection col s2\">\n            <p className=\"collection-item\">Helpful Links</p>\n            <a href=\"https://thestorystarter.com\" className=\"collection-item\" target=\"_blank\" rel=\"noopener noreferrer\">Story Starter</a>\n            <a href=\"https://pw.org/content/literary-magazines\" className=\"collection-item\" target=\"_blank\" rel=\"noopener noreferrer\">Literary Magazines</a>\n            <a href=\"https://copyright.gov\" className=\"collection-item\" target=\"_blank\" rel=\"noopener noreferrer\">copyright.org</a>\n            <a href=\"https://writingcenter.unc.edu/tips-and-tools/group-writing/\" className=\"collection-item\" target=\"_blank\" rel=\"noopener noreferrer\">Tips</a>\n        </div>\n    )\n}\n\nexport default StaticSidebar;","import React from 'react'\nimport { Link } from \"react-router-dom\";\n\n\nconst Welcome = props => {\n    return (\n        <div className=\"welcome-content\">\n            <h1>Welcome to Write-Share!!! Creativity made Easy!</h1>\n            <p>Write Share is a dynamic tool used to improve the writing skills of everyone through collaboration.  Ideas curated within groups lend themselves towards a more fruit-full product.  Working within groups improves both confidence and productivity. Sharing work creates a culture of accountability and self-worth.</p>\n            <p>How do we work?</p>\n            <p>Followed by a video tutorial to registering/login writing your first pod</p>\n\n            <h4 className=\"registration-link\"><Link to=\"/register\">Register Here and Start Writing Today</Link></h4>\n        </div>        \n    )\n\n}\n\nexport default Welcome;","import axios from \"axios\";\n\nexport default {\n\n  login: function(userData) {\n    return axios.post(\"/api/user\", userData);\n  },\n  register: function(userData) {\n      return axios.post(\"/api/user/new\", userData)\n  },\n  createPod: function(podData) {\n    return axios.post(\"api/pod\", podData)\n  },\n  getMyPods: function(userId) {\n    return axios.post(\"api/pod/mypods\", userId)\n  },\n  getOnePod: function(podId) {\n    return axios.post(\"../api/pod/currentpod\", podId)\n  },\n  newContent: function(content) {\n    return axios.post(\"../api/content\", content)\n  },\n  nextUser: function(data) {\n    return axios.post(\"../api/pod/nextuser\", data)\n  },\n  findAll: function() {\n    return axios.get(\"api/pod\")\n  },\n  joinPod: function(data) {\n    return axios.post(\"../api/pod/join\", data)\n  },\n  findYourTurn: function(data) {\n    return axios.post('api/pod/yourturn', data)\n  }\n};\n","import React from 'react';\nimport { AppContext } from '../../Context';\nimport API from '../../utils/API'\n\n\nclass Register extends React.Component {\n    state = {\n        email: \"\",\n        username: \"\",\n        password: \"\",\n        password2: \"\",\n        about_me: \"\",\n        currentUser: \"\",\n        currentUserId: \"\",\n        registerFail: false\n    }\n\n    checkInputs = () => {\n        return this.state.password.length > 5 && \n        this.state.password === this.state.password2 &&\n        this.state.username.length > 0 &&\n        this.state.email.length > 4\n    }\n\n    handleInputChange = event => {\n        const { name, value } = event.target;\n        this.setState({\n          [name]: value\n        });\n      };\n\n      handleRegister = () => {\n        API.register({\n            email: this.state.email,\n            username: this.state.username,\n            password: this.state.password,\n            aboutMe: this.state.about_me\n        }).then(res => {\n            if (res.status === 200 && res.data !== 'user already exists'){\n                this.setState({currentUser: res.data.username, currentUserId:res.data._id})\n            } else {\n                this.setState({registerFail: true})\n            }\n        }).catch(err=> console.log(err))\n    }\n\n    render() {\n    return (\n        <AppContext.Consumer>\n            {value=> {\n                const {contextLogin} = value;\n                return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <h4>New User Registration</h4>\n            </div>\n            <div className=\"row\">\n                <div className=\"col s12\">\n                    <div className=\"row\">\n                        <div className=\"input-field col s12\">\n                            <i className=\"material-icons prefix\">computer</i>\n                            <input id=\"email\" type=\"email\" className=\"validate black-text\" name=\"email\" value={this.state.email} onChange={this.handleInputChange}/>\n                            <label className=\"black-text\" htmlFor=\"email\">Email</label>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"input-field col s12\">\n                            <i className=\"material-icons prefix\">account_box</i>\n                            <input id=\"username\" type=\"text\" className=\"validate black-text\" name=\"username\" value={this.state.username} onChange={this.handleInputChange}/>\n                            <label className=\"black-text\" htmlFor=\"username\">Username</label>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"input-field col s6\">\n                            <i className=\"material-icons prefix\">perm_identity</i>\n                            <input id=\"password1\" type=\"password\" className=\"validate\" name=\"password\" value={this.state.password} onChange={this.handleInputChange}/>\n                            <label className=\"black-text\" htmlFor=\"password1\">Password (6 character minimum)</label>\n                        </div>\n                        <div className=\"input-field col s6\">\n                            <i className=\"material-icons prefix\">perm_identity</i>\n                            <input id=\"password2\" type=\"password\" className=\"validate\" name=\"password2\" value={this.state.password2} onChange={this.handleInputChange}/>\n                            <label className=\"black-text\" htmlFor=\"password2\">Re-Enter Password</label>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col s12\">\n                            <div className=\"row\">\n                                <div className=\"input-field col s12\">\n                                    <i className=\"material-icons prefix\">mode_edit</i>\n                                    <textarea id=\"icon_prefix2\" className=\"materialize-textarea\" name=\"about_me\" value={this.state.about_me} onChange={this.handleInputChange}></textarea>\n                                    <label className=\"black-text\" htmlFor=\"icon_prefix2\">About Me...</label>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    {this.state.registerFail ? (\n                        <div className=\"card-panel red lighten-3 red-text text-darken-4\">Registration Failed: Try Again - email may already be in use</div>\n                    ): (\n                        \"\"\n                    )}\n\n                    {this.state.currentUser ? contextLogin(this.state.currentUser, this.state.currentUserId) : \"\"}\n\n                    <button disabled={!this.checkInputs()} className=\"btn waves-effect waves-light btn-large right main-button-font orange darken-3\"   onClick={this.handleRegister} >Submit\n                        <i className=\"material-icons right\">send</i>\n                    </button>\n                </div>\n            </div>\n        </div>\n                )\n        }}\n        </AppContext.Consumer>\n    )\n    }\n}\n\nexport default Register;","import React from 'react'\nimport {Link} from 'react-router-dom'\nimport {AppContext} from '../../Context'\n\nconst UserSidebar = props => {\n    return (\n        <AppContext.Consumer>\n        {context => \n        <div className=\"collection col s2\">\n            <h4>{context.currentUser}</h4>\n            <Link to=\"/\" className=\"collection-item\">Home</Link>\n            <Link to=\"/mypods\" className=\"collection-item\">My Pods</Link>\n            <Link to=\"/create\" className=\"collection-item\">Create Pod</Link>\n            <Link to=\"/search\" className=\"collection-item\">Search Pods</Link>\n        </div>\n        }\n        </AppContext.Consumer>\n    )\n}\n\nexport default UserSidebar;","import React from 'react'\nimport UserSidebar from '../../components/UserSidebar'\nimport {AppContext} from '../../Context'\nimport API from '../../utils/API';\nimport {Link} from 'react-router-dom'\n\n\nclass Dashboard extends React.Component {\n    state = {\n        pods: [],\n        currentUser: \"\",\n        currentUserId: \"\"\n    }\n\n    findYourTurn = (id,username) => {\n        API.findYourTurn({\n            id: id,\n            username: username\n        })\n        .then(res => this.setState({pods: res.data}))\n        .catch(err => console.log(err));\n    }\n\n    render(){\n        return (\n            <AppContext.Consumer>\n                {(context) => {\n                    return(\n                        <>\n                            <UserSidebar />\n                            <div className=\"col s10\">\n                                <h4>Hi {context.currentUser}! Welcome to Write Share!</h4>\n                                <p>Search, Create, and Navigate Pods on the left sidebar</p>\n                                <h5>It's your turn in these Pods:</h5>\n                                {this.state.pods.length ? (this.state.pods.map(pod => {\n                                    return(\n                                          <div className=\"row\" key={pod._id}>\n                                          <div className=\"col s8\">\n                                            <div className=\"card blue-grey darken-1\">\n                                              <div className=\"card-content white-text\">\n                                                <span className=\"card-title your-turn-title\">{pod.name}</span>\n                                                {pod.content.length ? (\n                                                <>\n                                                    <p>Previous Post: written by {pod.content[pod.content.length -1].contentCreator}</p>\n                                                    <hr/>\n                                                    <p>{pod.content[pod.content.length -1].contentText}</p>\n                                                </>\n                                                ) : (\n                                                    <p>No Content in This Pod Yet</p>\n                                                )}\n                                              </div>\n                                              <div className=\"card-action\">\n                                              <Link to={\"./pods/\"+pod._id}>Click Here to Write</Link>\n                                              </div>\n                                            </div>\n                                          </div>\n                                        </div>\n                                    )\n                                })) : (\n                                    <div className=\"row\">\n                                        <div className=\"col s8 \">\n                                        <div className=\"card-panel blue-grey darken-1\">\n                                            <span className=\"white-text\">It's not your turn in any of your Pods\n                                            </span>\n                                        </div>\n                                        </div>\n                                    </div>\n                                )}\n                            </div>\n                            {this.findYourTurn(context.currentUserId, context.currentUser)}\n                        </>\n                    )}}\n            </AppContext.Consumer>\n        )\n    }\n}\n\nexport default Dashboard;","import React from 'react';\nimport { Link } from 'react-router-dom'\n\nconst MyPodsTable = props => {\n\n    return (\n        <div className=\"col s12 container\">\n        <table className=\"pod-table\">\n        <thead>\n          <tr>\n              <th>Name</th>\n              <th>Topic</th>\n              <th>Active Participant</th>\n          </tr>\n        </thead>\n\n        <tbody>\n            {props.pods.map(pod => {\n                return(\n                <tr key={pod._id}>\n                    <td className=\"pod-link\"><Link to={\"./pods/\"+pod._id}>{pod.name}</Link></td>\n                    <td>{pod.topic}</td>\n                    <td>{pod.activeParticipant}</td>\n                </tr>\n                )\n            })}\n        </tbody>\n      </table>\n      </div>\n    )\n}\n\nexport default MyPodsTable;","import React from 'react'\nimport MyPodsTable from '../../components/MyPodsTable'\nimport UserSidebar from '../../components/UserSidebar'\nimport API from '../../utils/API'\n\nclass MyPods extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {userId: props.userId, pods: []};\n      }\n\n    \n\n    componentDidMount() {\n        console.log(this.state.userId)\n        API.getMyPods({userId: this.state.userId})\n        .then(res => {\n            console.log(res)\n            this.setState({pods: res.data})\n        })\n        .catch(err => console.log(err))\n    }\n    \n    render(){\n    return (\n        <>\n            <UserSidebar />\n            <div className=\"col s10\">\n            <div className=\"container\">         \n            <nav id=\"my-pod-searchbar\">\n                <div className=\"nav-wrapper\">\n                <form>\n                    <div className=\"input-field\">\n                    <input className=\"blue lighten-1\" id=\"search\" type=\"search\" placeholder=\"Search My Pods\" required />\n                    <label className=\"label-icon\" htmlFor=\"search\"><i className=\"material-icons\">search</i></label>\n                    <i className=\"material-icons\">close</i>\n                    </div>\n                </form>\n                </div>\n            </nav>\n            <h4>My Current Pods</h4>\n            {this.state.pods.length ? (\n            <MyPodsTable pods={this.state.pods} />\n            ) : (\n                <p>No Current Pods</p>\n            )\n            }\n            </div>\n            </div>\n        </>\n    )\n    }\n}\n\nexport default MyPods;","import React from 'react'\nimport {AppContext} from '../../Context'\nimport API from '../../utils/API'\n\n\nclass Login extends React.Component {\n    state = {\n        email: \"\",\n        password: \"\",\n        currentUser: \"\",\n        currentUserId: \"\",\n        loginFail: false\n    }\n\n    handleInputChange = event => {\n        const { name, value } = event.target;\n        this.setState({\n          [name]: value\n        });\n      };\n\n      handleLogin = () => {\n        API.login({\n            email: this.state.email,\n            password: this.state.password\n        })\n        .then(res => {\n            if (res.data === 'no user' || res.data === 'incorrect password') {\n                this.setState({loginFail: true, password: \"\"});\n            }else{\n                this.setState({currentUser: res.data.username, currentUserId:res.data._id})\n            }\n        })\n        .catch(err => console.log(err))\n    }\n\n    render() {\n    return (\n        <AppContext.Consumer>\n            {value => {\n                const {contextLogin} = value;\n                return(\n                <div className=\"container login-form\">\n                    <div className=\"row\">\n                        <h4>Log In Here</h4>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"input-field col s12\">\n                            <i className=\"material-icons prefix\">computer</i>\n                            <input id=\"email\" type=\"email\" className=\"validate black-text\" name=\"email\" onChange={this.handleInputChange} value={this.state.email}/>\n                            <label className=\"black-text\" htmlFor=\"email\">Email</label>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"input-field col s12\">\n                            <i className=\"material-icons prefix\">perm_identity</i>\n                            <input id=\"password1\" type=\"password\" name=\"password\" className=\"validate black-text\" onChange={this.handleInputChange} value={this.state.password}/>\n                            <label className=\"black-text\" htmlFor=\"password1\">Password</label>\n                        </div>\n                    </div>\n                    {this.state.loginFail ? (\n                        <div className=\"card-panel red lighten-3 red-text text-darken-4\">Login Failed: Try Again</div>\n                    ): (\n                        \"\"\n                    )}\n\n                    {this.state.currentUser ? contextLogin(this.state.currentUser, this.state.currentUserId) : \"\"}\n                    \n                    <button className=\"btn waves-effect waves-light btn-large right main-button-font submit-button orange darken-3\"  onClick={this.handleLogin}>Submit\n                            <i className=\"material-icons right\">send</i>\n                    </button>\n\n                </div>\n\n                )\n                }}\n        </AppContext.Consumer>\n    )\n    }\n}\n\nexport default Login;","import React from 'react'\nimport UserSidebar from '../../components/UserSidebar'\nimport API from '../../utils/API'\n\nclass CreatePod extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {userId: props.userId, user: props.user, podName: \"\", topic: \"\", numParticipants: \"\", newPodCreated: false, createFail: false};\n    };\n\n    handleInputChange = event => {\n        const { name, value } = event.target;\n        this.setState({\n          [name]: value\n        });\n      };\n\n      handleNewPod = () => {\n        API.createPod({\n            userId: this.state.userId,\n            topic: this.state.topic,\n            name: this.state.podName,\n            creator: this.state.user,\n            creatorId: this.state.userId,\n            numParticipants: this.state.numParticipants,\n            activeParticipant: this.state.user,\n            totalParticipants: [this.state.user],\n            participantIds:[this.state.userId]\n        }).then(res => {\n            if (res.status === 200) {\n                this.setState({newPodCreated: true, podName: \"\", topic: \"\", numParticipants: \"\"})\n            } else {\n                this.setState({createFail: true, podName: \"\", topic: \"\", numParticipants: \"\"})\n            }\n        })\n        .catch(err => {\n            console.log(err)\n        })\n    }\n\n    checkInputs = () => {\n        return (\n            this.state.podName.length > 0 &&\n            this.state.topic.length > 0 &&\n            this.state.numParticipants > 1 &&\n            this.state.numParticipants < 5\n        )\n    }\n\n    render() {\n    return (\n        <>\n            <UserSidebar/>\n            <div className=\"col s10\">\n            <div className=\"row\">\n                <h4>Create a New Writing Pod</h4>\n            </div>\n            <div className=\"row\">\n                <div className=\"col s12\">\n                    <div className=\"row\">\n                        <div className=\"input-field col s8\">\n                        <input name=\"podName\" value={this.state.podName} id=\"new-pod-name\" type=\"text\" className=\"validate\" onChange={this.handleInputChange} />\n                        <label className=\"black-text\" htmlFor=\"new-pod-name\">Pod Name</label>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"input-field col s8\">\n                        <input name=\"topic\" value={this.state.topic} id=\"new-pod-topic\" type=\"text\" className=\"validate\" onChange={this.handleInputChange} />\n                        <label className=\"black-text\" htmlFor=\"new-pod-topic\">Topic</label>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"input-field col s5\">\n                        <input name=\"numParticipants\" value={this.state.numParticipants} id=\"new-pod-user-count\" type=\"number\" min=\"1\" max=\"4\" className=\"validate\" onChange={this.handleInputChange} />\n                        <label className=\"black-text\" htmlFor=\"new-pod-user-count\">Maximum User Count (4 max)</label>\n                        </div>\n                    </div>\n                    </div>\n                </div>\n\n                {this.state.newPodCreated ? (\n                    <div className=\"card-panel green lighten-3 green-text text-darken-4 center-align\">New Pod Created!</div>\n                ): (\n                    \"\"\n                )}\n\n                {this.state.createFail ? (\n                    <div className=\"card-panel red lighten-3 red-text text-darken-4\">Pod Creation Failed: Try Again</div>\n                ): (\n                    \"\"\n                )}\n\n                <button disabled={!this.checkInputs()} className=\"btn waves-effect waves-light btn-large right main-button-font orange darken-3\"  onClick={this.handleNewPod}>Submit\n                            <i className=\"material-icons right\">send</i>\n                    </button>\n            </div>\n        </>\n    )\n    }\n}\n\nexport default CreatePod;","import React from 'react'\nimport UserSidebar from '../../components/UserSidebar'\nimport {Link} from 'react-router-dom'\nimport API from '../../utils/API';\n\nclass SearchPods extends React.Component {\n    state = {\n        pods: []\n    }\n\n    componentDidMount() {\n        API.findAll().then(res => {\n            this.setState({\n                pods: res.data\n            })\n        }).catch(err => console.log(err))\n    }\n\n    render() {\n    return(\n        <>\n        <UserSidebar />\n        <div className=\"col s10\">\n            <div className=\"container\">\n            <h4>Search for Writing Pods</h4>\n            <nav id=\"pod-searchbar\">\n                <div className=\"nav-wrapper\">\n                <form>\n                    <div className=\"input-field\">\n                    <input className=\"blue lighten-1\" id=\"pod-search\" type=\"search\" placeholder=\"Search Pods Here\" required />\n                    <label className=\"label-icon\" htmlFor=\"pod-search\"><i className=\"material-icons\">search</i></label>\n                    <i className=\"material-icons\">close</i>\n                    </div>\n                </form>\n                </div>\n            </nav>\n\n            <table className=\"pod-table\">\n                <thead>\n                    <tr>\n                        <th>Name:</th>\n                        <th>Topic:</th>\n                        <th>Creator:</th>\n                        <th>#:</th>\n                        <th>Max #:</th>\n                    </tr>\n                </thead>\n                <tbody>\n                {this.state.pods.map(pod => {\n                    return (\n                        <tr key={pod._id}>\n                            <td className=\"pod-link\"><Link to={\"./pods/\"+pod._id}>{pod.name}</Link></td>\n                            <td>{pod.topic}</td>\n                            <td>{pod.creator}</td>\n                            <td>{pod.totalParticipants.length}</td>\n                            <td>{pod.numParticipants}</td>\n                        </tr>\n                    )\n                })}\n                </tbody>\n            </table>\n            \n            </div>\n        </div>\n        </>\n    )}\n}\n\nexport default SearchPods;","import React from \"react\";\n\nconst PodNav = props => {\n  return (\n    <>\n      <nav className=\"col s12 blue darken-3 white-text\">\n        <div className=\"nav-wrapper\" id=\"mypod-nav\">\n          <h2 className=\"brand-logo center pod-name\">\n            {props.podData.name}\n          </h2>\n          <ul className=\"left\">\n          {(props.podData.activeParticipant === props.currentUser) && (props.podData.participantIds.indexOf(props.currentUserId) > -1) ? (\n              <li>\n                <button className=\"btn red accent-2\" onClick={props.iterateUser}>Skip Turn</button>\n              </li>\n            ) : (\n              \"\"\n            )}\n            {props.podData.participantIds.indexOf(props.currentUserId) === -1 ? (\n                <li>\n                    <button onClick={()=> props.joinPod(props.currentUserId, props.currentUser)} className=\"btn yellow darken-2 black-text\">Join</button>\n                </li>\n            ) : (\n                \"\"\n            )}\n          </ul>\n          <ul id=\"nav-mobile\" className=\"right\">\n            <li>\n              <p id=\"active-writer\">Active Writer: {props.podData.activeParticipant}</p>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    </>\n  );\n};\n\nexport default PodNav;\n","import React from 'react';\nimport { AppContext } from '../../Context';\nimport API from '../../utils/API';\nimport UserSidebar from '../../components/UserSidebar';\nimport PodNav from '../../components/PodNav'\n\nclass Pod extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            podId: this.props.match.params.id,\n            activeParticipant: \"\",\n            creator: \"\",\n            creatorId: \"\",\n            name: \"\",\n            numParticipants: 0,\n            participantIds: [],\n            topic: \"\",\n            totalParticipants: [],\n            content: [],\n            newContent: \"\"\n        };\n      }\n\n    componentDidMount() {\n        this.getPodData()\n    }\n\n    getPodData = () => {\n        API.getOnePod({podId: this.state.podId})\n        .then(res => {\n            console.log(res);\n            this.setState({\n                activeParticipant: res.data.activeParticipant,\n                creator: res.data.creator,\n                creatorId: res.data.creatorId,\n                name: res.data.name,\n                numParticipants: res.data.numParticipants,\n                participantIds: res.data.participantIds,\n                topic: res.data.topic,\n                totalParticipants: res.data.totalParticipants,\n                content: res.data.content\n            })\n        })\n        .catch(err => console.log(err));\n    }\n\n    handleInputChange = event => {\n        const name = event.target.name;\n        const value = event.target.value;\n        this.setState({\n          [name]: value\n        });\n      };\n\n    yourTurn = (username, id) => {\n        return (this.state.activeParticipant === username) && (this.state.participantIds.indexOf(id) > -1)\n    };\n\n    postContent = () => {\n        API.newContent({\n            contentText: this.state.newContent,\n            contentCreator: this.state.activeParticipant,\n            podId: this.state.podId\n        })\n        .then(res => {\n            this.iterateUser();\n            this.setState({newContent: \"\"})\n        })\n        .catch(err=> console.log(err))\n    }\n\n    iterateUser = () => {\n        let currentIndex= this.state.totalParticipants.indexOf(this.state.activeParticipant);\n        let num = this.state.totalParticipants.length - 1;\n        let newIndex;\n\n        if(currentIndex === num) {\n            newIndex = 0\n        } else {\n            newIndex = currentIndex +1\n        }\n\n        API.nextUser({\n            newActive: this.state.totalParticipants[newIndex],\n            podId: this.state.podId\n        })\n        .then(res => {\n            this.getPodData()\n        })\n    }\n\n    joinPod = (userId, username) => {\n        if(this.state.totalParticipants.length >= this.state.numParticipants) {\n            return;\n        }\n        API.joinPod({\n            userId: userId,\n            username: username,\n            podId: this.state.podId\n        })\n        .then(res => this.getPodData())\n        .catch(err => console.log(err));\n    }\n\n    render() {\n        return (\n        <AppContext.Consumer>\n            {value => {\n                return (\n                    <>\n                        <UserSidebar />\n                        <div className=\"col s10\">\n                        <PodNav iterateUser={this.iterateUser} joinPod={this.joinPod} podData={this.state} currentUserId={value.currentUserId} currentUser={value.currentUser}/>\n                        {this.state.totalParticipants.length ? (<p>Pod Participants: {this.state.totalParticipants.join(\", \")}</p>) : (\"\")}\n                        <div className=\"row\">\n                        <div className=\"col s12\">\n                            <div className=\"row\">\n                            <div className=\"input-field col s12\">\n                                <textarea name=\"newContent\" value={this.state.newContent} disabled={!this.yourTurn(value.currentUser, value.currentUserId)} id=\"textarea1\" className=\"materialize-textarea\" length=\"3000\" onChange={this.handleInputChange}></textarea>\n                                <label htmlFor=\"textarea1\">Your Content Here</label>\n                            </div>\n                            </div>\n                            <button disabled={!this.yourTurn(value.currentUser, value.currentUserId)} className=\"btn right green lighten-2 black-text\" onClick={this.postContent}>Post<i className=\"material-icons right\">add_circle_outline</i></button>\n                        </div>\n                        </div>\n\n                        <h3>Story Time:</h3>\n                        {!this.state.content.length ? (\n                            <div className=\"row\">\n                                <div className=\"col s12\">\n                                    <div className=\"card-panel teal\">\n                                        <span className=\"white-text\">No Content Yet!\n                                        </span>\n                                    </div>\n                                </div>\n                            </div>\n                        ) : (\n                            this.state.content.map(block => {\n                                return(\n                                    <div class=\"row\" key={block.contentText}>\n                                        <div class=\"col s12\">\n                                        <div class=\"card blue-grey lighten-1\">\n                                            <div class=\"card-content white-text\">\n                                            <p className=\"white-text content-font\">{block.contentText}</p>\n                                            </div>\n                                            <div class=\"card-action\">\n                                            <p className=\"written-by\">Written By: {block.contentCreator}</p>\n                                            </div>\n                                        </div>\n                                        </div>\n                                    </div>\n                                )\n                            })\n                        )}\n\n                        </div>\n                    </>\n                )\n            }}\n\n        </AppContext.Consumer>\n        )\n    }\n\n}\n\n\nexport default Pod;","import React, { Component } from 'react';\nimport './App.css';\nimport {AppProvider, AppContext} from './Context'\nimport Navbar from './components/Navbar'\nimport StaticSidebar from './components/StaticSidebar'\nimport Welcome from './pages/Welcome'\nimport Register from './pages/Register'\nimport Dashboard from './pages/Dashboard'\nimport MyPods from './pages/MyPods'\nimport Login from './pages/Login'\nimport CreatePod from './pages/CreatePod'\nimport SearchPods from './pages/SearchPods'\nimport Pod from './pages/Pod'\nimport { BrowserRouter as Router, Route, Redirect } from \"react-router-dom\";\n\nclass App extends Component {\n\n  render() {\n    return (\n      <Router>\n        <AppProvider>\n          <Navbar />\n          <div className=\"row content-area\">\n            <div className=\"col s10\">\n              <AppContext.Consumer>\n                {value => {\n                  const {currentUser, currentUserId} = value\n                  return(\n                  <>\n                    <Route exact path=\"/\" component={currentUser ? Dashboard : Welcome} />\n                    <Route exact path=\"/register\" render={() => (\n                      currentUser ? (\n                        <Redirect to=\"/\" />\n                      ) : (\n                        <Register />\n                      )\n                      )} />\n                    <Route exact path=\"/login\" render={() => (\n                      currentUser ? (\n                        <Redirect to=\"/\" /> \n                      ) : (\n                        <Login/>\n                      )\n                      )} />\n                    <Route exact path=\"/mypods\" render={() => (\n                      currentUser ? (\n                        <MyPods userId={currentUserId}/>\n                      ) : (\n                        <Redirect to=\"/\" />\n                      )\n                    )} />\n                    <Route exact path=\"/create\" render={() => (\n                      !currentUser ? (\n                        <Redirect to=\"/\" />\n                      ) : (\n                        <CreatePod userId={currentUserId} user={currentUser} />\n                      )\n                      )} />\n                      <Route exact path=\"/search\" render={() => (\n                      !currentUser ? (\n                        <Redirect to=\"/\" />\n                      ) : (\n                        <SearchPods />\n                      )\n                      )} />\n                      <Route path=\"/pods/:id\" render={(props) => (\n                      !currentUser ? (\n                        <Redirect to=\"/\" />\n                      ) : (\n                        <Pod {...props}/>\n                      )\n                      )} />\n                  </>\n                  \n              )}}\n              </AppContext.Consumer>\n            </div>\n            <StaticSidebar />\n          </div>\n        </AppProvider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}